#N canvas 458 23 692 730 12;
#X obj 61 357 netreceive 3000;
#X floatatom 163 453 0 0 0 0 - - -;
#X text 197 454 <--- number of open connections;
#X text 97 690 see also:;
#X obj 183 691 netsend;
#X obj 61 453 print tcp;
#X obj 36 577 print udp;
#X text 33 154 There are some possibilities for intercommunication
with other programs... see the help for "netsend.", f 85;
#X obj 36 549 netreceive -u 3001;
#X text 195 341 creation arguments:;
#X text 263 360 optional -u flag for UDP;
#X text 263 378 optional -b flag for binary;
#X text 263 414 optional port number;
#X obj 219 549 netreceive -b 3002;
#X obj 219 577 print tcp-binary;
#X obj 403 577 print udp-binary;
#X msg 71 274 listen 0;
#X text 171 245 listen message to set or change port;
#X text 177 275 (0 or negative number to close);
#X msg 61 243 listen 3000;
#X text 33 88 By default the messages are ASCII text messages compatible
with Pd (i.e. \, numbers and symbols terminated with a semicolon --
the "FUDI" protocol). The "-b" creation argument specifies binary messages
instead \, which appear in Pd as lists of numbers from 0 to 255 (You
could use this for OSC messages \, for example.), f 83;
#X msg 82 328 send foo \$1;
#X floatatom 82 305 0 0 0 0 - - -;
#X floatatom 219 500 0 0 0 0 - - -;
#X text 119 305 "send" (for TCP connections only) sends back to connected
netreceive objects, f 76;
#X text 453 690 updated for Pd version 0.50.;
#X text 35 621 An old (pre-0.45) calling convention is provided for
compatibility \, port number and following "0" or "1" for TCP or UDP
respectively:, f 67;
#X text 34 490 Other examples:;
#X text 530 607 (UDP port 3004);
#X obj 403 549 netreceive -u -b -f 3003;
#X obj 568 577 print from;
#X text 263 396 optional -f flag for from address & port outlet (0.50+)
;
#X text 33 192 SECURITY NOTE: Don't publish the port number of your
netreceive unless you wouldn't mind other people being able to send
you messages., f 85;
#X text 263 433 optional UDP hostname or multicast address (0.50+)
;
#X text 33 36 The netreceive object opens a socket for TCP ("stream")
or UDP ("datagram") network reception on a specified port. If using
TCP \, an outlet gives you the number of netsend objects (or other
compatible clients) that have opened connections here., f 84;
#X text 85 12 netreceive -- listen for incoming messages from network
;
#X text 36 658 As of 0.50+ \, Pd supports IPv6 addresses.;
#X obj 531 633 netreceive 3004 1;
#X msg 219 524 4 5 6 \$1;
#X text 289 524 lists work like "send" (Pd 0.50+);
#N canvas 694 147 540 490 IP 0;
#X obj 24 412 print udp-hostname;
#X text 285 270 IPv4 multicast;
#X text 270 302 IPv6 multicast;
#X obj 24 374 netreceive -u -f;
#X obj 171 412 print from-hostname;
#X msg 125 336 listen 0;
#X msg 97 301 listen 3005 ff00::114;
#X msg 77 270 listen 3005 239.200.200.200;
#X msg 70 237 listen 3005 ::1;
#X msg 61 202 listen 3005 127.0.0.1;
#X msg 36 169 listen 3005 localhost;
#X text 226 202 IPv4 messages;
#X text 21 13 As of Pd 0.50+ \, netreceive accepts a hostname which
can be a UDP multicast address or a network interface. Note that you
can't specify a remote host - that is the job of a firewall.;
#X text 20 64 By default \, netreceive listens on any IP4 and IPv6
interface. As soon as you specify an address or hostname \, it will
try to detect the IP version. Hostname resolution favors IPv4 results
for backwards compatibility., f 58;
#X obj 326 386 netreceive 3005 ::1;
#X obj 326 413 print tcp-hostname;
#X text 325 349 listen for IPv6 TCP messages on localhost, f 22;
#X msg 24 137 listen 3005;
#X text 120 136 any IPv4 and IPv6 messages (default);
#X text 196 169 IPv4 or IPv6 messages (system dependent);
#X text 191 238 IPv6 messages *);
#X text 27 440 *) on some systems you can also receive IPv4 messages.
It certainly doesn't work on Windows., f 54;
#X connect 3 0 0 0;
#X connect 3 1 4 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 3 0;
#X connect 10 0 3 0;
#X connect 14 0 15 0;
#X connect 17 0 3 0;
#X restore 403 493 pd IP version and multicast;
#X connect 0 0 5 0;
#X connect 0 1 1 0;
#X connect 8 0 6 0;
#X connect 13 0 14 0;
#X connect 16 0 0 0;
#X connect 19 0 0 0;
#X connect 21 0 0 0;
#X connect 22 0 21 0;
#X connect 23 0 38 0;
#X connect 29 0 15 0;
#X connect 29 1 30 0;
#X connect 38 0 13 0;
